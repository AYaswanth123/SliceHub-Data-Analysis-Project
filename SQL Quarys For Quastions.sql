-- QUESTIONS AND ANSWERS

-- 1) Retrieve the total number of orders placed.
SELECT COUNT(ORDER_ID) AS TOTAL_ORDERS FROM ORDERS;

-- 2)Calculate the total revenue generated from pizza sales.
SELECT ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE),2) AS TOTAL_REVENUE FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID;

-- 3) Identify the highest-priced pizza.
SELECT PIZZA_TYPES.NAME AS PIZA_NAME,PIZZAS.PRICE FROM PIZZA_TYPES
JOIN PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID 
ORDER BY PIZZAS.PRICE DESC
LIMIT 1;

-- 4) Identify the most common pizza size ordered.


SELECT PIZZAS.SIZE, SUM(ORDER_DETAILS.QUANTITY) AS COUNT FROM PIZZAS
JOIN ORDER_DETAILS ON PIZZAS.PIZZA_ID =ORDER_DETAILS.PIZZA_ID
GROUP BY PIZZAS.SIZE 
ORDER BY COUNT DESC         -- BEACUSE IN THE QUANTITY SUM ORDERS OR 2,3,4 THEN DATA OF SIZE COUNT ALSO CHANGE
LIMIT 1;

-- 5) List the top 5 most ordered pizza types along with their quantities.

SELECT  PIZZA_TYPES.NAME,SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.NAME
ORDER BY  QUANTITY DESC
LIMIT 5;

-- 6) Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT  PIZZA_TYPES.CATEGORY,SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.CATEGORY
ORDER BY  QUANTITY DESC;

-- 7) Determine the distribution of orders by hour of the day.
SELECT HOUR(TIME) AS HOURS , COUNT(ORDER_ID) AS ORDERS_BY_HOUR FROM ORDERS
GROUP BY HOURS
ORDER BY ORDERS_BY_HOUR DESC;

-- 8) Join relevant tables to find the category-wise distribution of pizzas.
SELECT CATEGORY, COUNT(NAME) AS PIZZA_TYPES FROM PIZZA_TYPES
GROUP BY CATEGORY;

-- 9) Group the orders by date and calculate the average number of pizzas ordered per day.

WITH CTE AS
(SELECT ORDERS.DATE, SUM(ORDER_DETAILS.QUANTITY) AS ORDERS_PER_DAY FROM ORDERS
JOIN ORDER_DETAILS ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID
GROUP BY ORDERS.DATE)
SELECT ROUND(AVG(ORDERS_PER_DAY)) AS AVERAGE_NUMBER_OF_PIZZAS FROM CTE;

-- 10) Determine the top 3 most ordered pizza types based on revenue.
SELECT PIZZA_TYPES.NAME, SUM((ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)) AS PIZZA_REVENUE FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.NAME
ORDER BY PIZZA_REVENUE DESC
LIMIT 3;

-- 11) Calculate the percentage contribution of each pizza to total revenue.

WITH P AS
(SELECT PIZZA_TYPES.NAME, SUM((ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)) AS PIZZA_REVENUE FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.NAME),
P1 AS
(SELECT ROUND(SUM((ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)),2) AS TOTAL_REVENUE FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID)

SELECT P.NAME, P.PIZZA_REVENUE, CONCAT(ROUND((P.PIZZA_REVENUE / P1.TOTAL_REVENUE)*100,2),'%') AS PER FROM P
CROSS JOIN P1 ;

-- 12) Calculate the percentage contribution of each pizza category type to total revenue.

WITH PC AS
(SELECT PIZZA_TYPES.CATEGORY, ROUND(SUM((ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)),2) AS PIZZA_REVENUE FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.CATEGORY),
PC1 AS
(SELECT ROUND(SUM((ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)),2) AS TOTAL_REVENUE FROM ORDER_DETAILS
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID)

SELECT PC.CATEGORY, PC.PIZZA_REVENUE, CONCAT(ROUND((PC.PIZZA_REVENUE / PC1.TOTAL_REVENUE)*100,2),'%') AS PER FROM PC
CROSS JOIN PC1 ;

-- 13) Analyze the cumulative revenue generated over time.

SELECT ORDER_DATE, ROUND(SUM(REVENUE) OVER (ORDER BY ORDER_DATE),2) AS CUMULATIVE_REVENUE FROM
(SELECT ORDERS.DATE AS ORDER_DATE, SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE FROM ORDERS
JOIN ORDER_DETAILS ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID
JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY ORDERS.DATE) AS SUB;

-- 14) Determine the top 3 most ordered pizza types based on revenue for each pizza category.

SELECT CATEGORY,PIZZA_NAME,REVENUE FROM 
(SELECT CATEGORY, PIZZA_NAME,REVENUE,
ROW_NUMBER() OVER (PARTITION BY CATEGORY ORDER BY PIZZA_NAME DESC) AS RANKING  FROM 
(SELECT PIZZA_TYPES.CATEGORY AS CATEGORY, PIZZA_TYPES.NAME AS PIZZA_NAME, SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE FROM PIZZA_TYPES
JOIN PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
GROUP BY CATEGORY,PIZZA_NAME) AS A) AS B
WHERE RANKING <=3;